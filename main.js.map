{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/componant/countries/countries.component.ts","./src/app/componant/countries/countries.component.html","./src/app/componant/dashboard-card/dashboard-card.component.ts","./src/app/componant/dashboard-card/dashboard-card.component.html","./src/app/componant/home/home.component.ts","./src/app/componant/home/home.component.html","./src/app/componant/navbar/navbar.component.ts","./src/app/componant/navbar/navbar.component.html","./src/app/service/data-service.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './componant/home/home.component';\nimport { CountriesComponent } from './componant/countries/countries.component';\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent },\n  { path: 'countries', component: CountriesComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'coronatracker';\n}\n","<app-navbar></app-navbar>\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { GoogleChartsModule } from 'angular-google-charts';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './componant/navbar/navbar.component';\nimport { HomeComponent } from './componant/home/home.component';\nimport { CountriesComponent } from './componant/countries/countries.component';\nimport {HttpClientModule} from '@angular/common/http';\nimport { DashboardCardComponent } from './componant/dashboard-card/dashboard-card.component'\nimport {NgxPaginationModule} from 'ngx-pagination';\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    HomeComponent,\n    CountriesComponent,\n    DashboardCardComponent,\n    \n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    GoogleChartsModule,\n    NgxPaginationModule\n    ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { DataServiceService } from 'src/app/service/data-service.service';\nimport { GlobalDataSummary } from 'src/app/models/global-data';\nimport { DateWiseData } from 'src/app/models/date-wise-data';\nimport { merge } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-countries',\n  templateUrl: './countries.component.html',\n  styleUrls: ['./countries.component.css']\n})\nexport class CountriesComponent implements OnInit {\ndata:GlobalDataSummary[];\ncountries:string[] =[];\ntotalConfirmed = 0;\ntotalActive = 0;\ntotalDeath = 0;\ntotalRecovred = 0;\nDatewiseData;\nSelectedCountryData: DateWiseData[];\nloading= true\ndatatable = [];\np: number = 1;\nchart= {\n  LineChart: \"LineChart\",\n\n  height: 500,\n  width:400,\n  options: {\n    animation:{\n      duration: 1000,\n      easing:'out',\n    },\n    is3D : true,\n  }\n}\n  constructor( private dataService: DataServiceService) { \n\n  }\n\n  ngOnInit(): void {\n    merge(\n      this.dataService.getdateWiseData().pipe(\n        map(result=>{\n          this.DatewiseData= result;\n        })\n      ),\n      this.dataService.getGlobalData().pipe( map(result=>{\n        this.data = result;\n        this.data.forEach(cs=>{\n          this.countries.push(cs.country)\n        })\n      }) \n    )\n    ).subscribe(\n      {\n        complete : ()=>{\n          this.UpdateValues('India')\n          // this.SelectedCountryData = this.DatewiseData['india']\n          // this.initChart()\n         this.loading= false;\n        }\n      }\n    )\n\n}\nUpdateValues(country:string){\n  console.log(country)\n  this.data.forEach(cs=>{\n    if(cs.country == country){\n        this.totalConfirmed = cs.confirmed;\n        this.totalActive = cs.active;\n        this.totalRecovred = cs.recovered;\n        this.totalDeath = cs.deaths;\n\n    }\n  })\nthis.SelectedCountryData =this.DatewiseData[country]\n// console.log(this.SelectedCountryData)\nthis.initChart();\n}\n\ninitChart(){\n  this.datatable = [];\n \n  this.SelectedCountryData.forEach(cs=>{\n    this.datatable.push([cs.date,cs.cases])\n    console.log(this.datatable);\n    \n  })\n}\n}\n","    <div class=\"ui active inverted dimmer\" [class.active]=\"loading\">\n      <div class=\"ui text loader\">Loading</div>\n    </div>\n   \n<div class=\"jumbotron bg-white text-center\">\n\n    <h1 class=\"display-4\"> Apna Covid Tracker Country Wise</h1>\n    <hr>\n    <div class=\"mx-auto\">\n        <div class=\"form-group col-lg-5 mx-auto\">\n<label for=\"c\">Select Country</label>\n<select name=\"\" class=\"form-control\" id=\"c\" #input (change)='UpdateValues(input.value)'  placeholder=\"India\">\n    <option value=\"India\" >India</option>\n    <option value=\"{{con}}\" *ngFor=\"let con of countries\" >{{con}}</option>\n\n</select>\n        </div>\n    </div>\n    <app-dashboard-card [totalConfirmed]='totalConfirmed' [totalDeath]='totalDeath' [totalRecovred]='totalRecovred' [totalActive]='totalActive'></app-dashboard-card>\n\n</div>\n<div class=\"row\">\n    <div class=\"col\">\n        <google-chart [type]=\"chart.LineChart\" [data]=\"datatable\" [height]=\"chart.height\"  [options]=\"chart.options\" style=\"width: 100%;\"></google-chart>\n\n    </div>\n    <div class=\"col\">\n        <div class=\"text-right\" >\n            <pagination-controls (pageChange)=\"p = $event\"></pagination-controls>\n\n        </div>\n<br>\n        <table  class=\"table\">\n            <thead>\n                <tr>\n                  <th>Sr No </th>\n                  <th>Date</th>\n                  <th>Cases</th>\n                </tr>\n                \n            </thead>\n          <tbody>\n              <tr  *ngFor=\"let  cs of SelectedCountryData | paginate: { itemsPerPage: 10, currentPage: p }; index as i\">\n                  <td>{{i+1}}</td>\n                  <td>{{cs.date| date}}</td>\n                  <td>{{cs.cases}}</td>\n              </tr>\n              \n      \n          </tbody>\n        </table>\n       \n    </div>\n\n  \n</div>","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard-card',\n  templateUrl: './dashboard-card.component.html',\n  styleUrls: ['./dashboard-card.component.css']\n})\nexport class DashboardCardComponent implements OnInit {\n@Input('totalConfirmed')\ntotalConfirmed\n@Input('totalDeath')\ntotalDeath\n@Input('totalActive')\ntotalActive\n@Input('totalRecovred')\ntotalRecovred\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col-md-3 col-lg-3 col-sm-12 col-xs-12\">\n\n    <div class=\"card  p-4 m-4\" style=\"background: linear-gradient(72deg, #e31313, #970707);\">\n        <div class=\"ui statistic\">\n            <div class=\"label\">\n            <h2 style=\"color: white;\">Confirmed</h2>  \n            </div><br>\n            <div class=\"value\" style=\" font-size: 3rem!important;color: white;\" >\n             {{totalConfirmed}}\n            </div>\n          </div>\n    </div>\n    </div>\n    <div class=\"col-md-3 col-lg-3 col-sm-12 col-xs-12\">\n\n    <div class=\"card  p-4 m-4\" style=\"background: linear-gradient(72deg,#04c724, #057c15);\">\n        <div class=\"ui statistic\">\n            <div class=\"label\">\n              <h2 style=\"color: white;\">Recovered</h2>  \n            </div><br>\n            <div class=\"value\" style=\" font-size: 3rem!important;color: white;\">\n             {{totalRecovred}}\n            </div>\n          </div>\n    </div>\n    </div>\n    <div class=\"col-md-3 col-lg-3 col-sm-12 col-xs-12\">\n\n    <div class=\"card  p-4 m-4\" style=\"background: linear-gradient(72deg,#396afc, #142fcc);\">\n        <div class=\"ui statistic\">\n            <div class=\"label\">\n                <h2 style=\"color: white;\">Active</h2>\n            </div>\n           <br>\n            <div class=\"value\" style=\" font-size: 3rem!important; color: white;\">\n             {{totalActive}}\n            </div>\n          </div>\n    </div>\n    </div>\n    <div class=\"col-md-3 col-lg-3 col-sm-12 col-xs-12\">\n\n    <div class=\"card p-4 m-4\" style=\"background: linear-gradient(72deg,#555758, #2c3e50);\">\n        <div class=\"ui statistic\">\n            <div class=\"label\">\n                <h2 style=\"color: white;\">Death</h2>\n            </div><br>\n            <div class=\"value\" style=\" font-size: 3rem!important;color: white;\">\n            {{totalDeath}}\n            </div>\n          </div>\n    </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { DataServiceService } from 'src/app/service/data-service.service'\nimport { from } from 'rxjs';\nimport { GlobalDataSummary } from 'src/app/models/global-data';\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  totalConfirmed = 0;\n  totalActive = 0;\n  totalDeath = 0;\n  totalRecovred = 0;\n  GlobalData: GlobalDataSummary[];\n   datatable = [];\n  chart= {\n    PieChart: \"PieChart\",\n    ColumnChart: \"ColumnChart\",\n    height: 500,\n    width:400,\n    options: {\n      animation:{\n        duration: 1000,\n        easing:'out',\n      },\n      is3D : true,\n    }\n  }\n  loading= true\n\n  constructor(private dataService: DataServiceService) { }\n  initChart(casetype: string) {\n   \n    // this.datatable.push(['Country', 'Cases'])\n    this.datatable = [];\n    this.GlobalData.forEach(cs => {\n      let value: Number;\n     \n      if (casetype == 'c'){\n        if (cs.confirmed > 80000) {\n          value = cs.confirmed\n          \n        }\n      }\n      \n      else if (casetype == 'r'){\n        if (cs.confirmed > 50000) {\n          value = cs.recovered\n          console.log(value)\n        }\n      }\n      \n      else if (casetype == 'a'){\n        if (cs.confirmed > 50000) {\n          value = cs.active\n        }\n      }\n      \n     else if (casetype == 'd'){\n      if (cs.confirmed > 10000) {\n        value = cs.deaths\n      }\n     }\n      \n\n      this.datatable.push([\n        cs.country, value\n      ])\n    })\n    \n    \n  }\n  ngOnInit() {\n    this.dataService.getGlobalData().subscribe(\n      {\n        next: (result) => {\n\n          console.log(result)\n          this.GlobalData = result;\n          result.forEach(cs => {\n            if (!Number.isNaN(cs.confirmed)) {\n              this.totalConfirmed += cs.confirmed;\n              this.totalActive += cs.active;\n              this.totalRecovred += cs.recovered;\n              this.totalDeath += cs.deaths;\n            }\n          })\n          this.initChart('c');\n          this.loading= false;\n        }\n      }\n    )\n\n  }\n  UpdateCharts(input: HTMLInputElement) {\n    this.initChart(input.value);\n  }\n}\n","<div class=\"ui active inverted dimmer\" [class.active]=\"loading\">\n  <div class=\"ui text loader\">Loading</div>\n</div>\n<div class=\"jumbotron bg-white text-center\">\n    <h1 class=\"display-4\"> Apna Covid Tracker</h1>\n    <hr>\n    <!-- <div class=\"row\">\n        <div class=\"card col p-3 m-3\">\n            <div class=\"ui statistic\">\n                <div class=\"label\">\n                <h3>Confirmed</h3>  \n                </div>\n                <div class=\"value\">\n                 {{totalConfirmed}}\n                </div>\n              </div>\n        </div>\n        <div class=\"card col p-3 m-3\">\n            <div class=\"ui statistic\">\n                <div class=\"label\">\n                  <h3>Recovered</h3>  \n                </div>\n                <div class=\"value\">\n                 {{totalRecovred}}\n                </div>\n              </div>\n        </div>\n        <div class=\"card col p-3 m-3\">\n            <div class=\"ui statistic\">\n                <div class=\"label\">\n                    <h3>Active</h3>\n                </div>\n               \n                <div class=\"value\">\n                 {{totalActive}}\n                </div>\n              </div>\n        </div>\n        <div class=\"card col p-3 m-3\">\n            <div class=\"ui statistic\">\n                <div class=\"label\">\n                    <h3>Death</h3>\n                </div>\n                <div class=\"value\">\n                {{totalDeath}}\n                </div>\n              </div>\n        </div>\n    </div> -->\n<app-dashboard-card [totalConfirmed]='totalConfirmed' [totalDeath]='totalDeath' [totalRecovred]='totalRecovred' [totalActive]='totalActive'></app-dashboard-card>\n</div>\n<hr>\n\n<div class=\"ui form\" style=\"padding-left: 20px;\">\n\n<div class=\"inline fields\">\n    <div class=\"field\">\n      <div class=\"ui radio checkbox\">\n        <input type=\"radio\" name=\"casetype\" #c (click)=\" UpdateCharts(c)\" id=\"c\" value=\"c\" checked=\"\" tabindex=\"0\" class=\"hidden\">\n        <label for=\"c\" style=\"color: red;\"><b>Confirmed</b></label>\n      </div>\n    </div>\n    <div class=\"field\">\n      <div class=\"ui radio checkbox\">\n        <input type=\"radio\" name=\"casetype\"  #r (click)=\" UpdateCharts(r)\" id=\"r\" value=\"r\" tabindex=\"0\" class=\"hidden\">\n        <label for=\"r\" style=\"color: green;\"><b>Recovered</b></label>\n      </div>\n    </div>\n    <div class=\"field\">\n      <div class=\"ui radio checkbox\">\n        <input type=\"radio\" name=\"casetype\"  #d (click)=\" UpdateCharts(d)\" id=\"d\" value=\"d\" tabindex=\"0\" class=\"hidden\">\n        <label for=\"d\" style=\"color: gray;\"><b>Death</b></label>\n      </div>\n    </div>\n    <div class=\"field\">\n      <div class=\"ui radio checkbox\">\n        <input type=\"radio\" name=\"casetype\" #a (click)=\" UpdateCharts(a)\" id=\"a\"  value=\"a\" tabindex=\"0\" class=\"hidden\">\n        <label for=\"a\" style=\"color: blue;\"><b>Active</b></label>\n      </div>\n    </div>\n  </div>\n</div>\n<div class=\"row \" style=\"padding: 4px;\" >\n  <div class=\"col-md-6 col-lg-6 col-sm-12 col-xs-12\">\n    <div class=\" card \" style=\"box-shadow: 0 0 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\">\n      <google-chart [type]=\"chart.PieChart\" [data]=\"datatable\" [height]=\"chart.height\"  [options]=\"chart.options\" style=\"width: 100%;\"></google-chart>\n\n    </div>\n  </div>\n  <div class=\"col-md-6 col-lg-6 col-sm-12 col-xs-12\">\n    <div class=\" card\" style=\"box-shadow: 0 0 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\">\n    \n      <google-chart [type]=\"chart.ColumnChart\" [data]=\"datatable\" [height]=\"chart.height\" [options]=\"chart.options\" style=\"width: 99%;\"></google-chart>\n\n    </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n  isShown:boolean=false;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!-- <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n    <a class=\"navbar-brand\" routerLink='/'>Apna Corona Portal</a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div class=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\n      <div class=\"navbar-nav\">\n        <a class=\"nav-item nav-link active\" routerLink='/'>Home <span class=\"sr-only\">(current)</span></a>\n        <a class=\"nav-item nav-link\" routerLink='countries'>Countries</a>\n      \n      </div>\n    </div>\n  </nav> -->\n  <nav class=\"navbar navbar-dark bg-dark navbar-expand-lg\">\n    <div class=\"container-fluid px-0\">\n      <div class=\"row w-100\">\n        <div class=\"col-2\">\n          <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarTogglerDemo03\" aria-controls=\"navbarTogglerDemo03\" aria-expanded=\"false\" aria-label=\"Toggle navigation\" (click)=\"isShown = !isShown\" >\n            <span class=\"navbar-toggler-icon\"></span>\n          </button>\n        </div>\n        <!-- <div class=\"col-1\">\n          <div style=\"padding-left: 20px;padding-top: 8px;\">\n            <h2 style=\"color: white;\">kjbeafisu</h2>\n          </div>\n         \n        </div> -->\n        <div class=\"col-10\">\n          <div class=\"collapse justify-content-left navbar-collapse\" [ngClass]=\"{ 'show': isShown }\" id=\"navbarTogglerDemo03\">\n            <ul class=\"navbar-nav mt-2 mt-lg-0\">\n              <li class=\"nav-item active\">\n                <a class=\"nav-link\" (click)=\"isShown = false\" routerLink='/' >Home</a>\n              </li>\n              <li class=\"nav-item\">\n                <a class=\"nav-link\" routerLink='countries'  (click)=\"isShown = false\" >About</a>\n              </li>\n            \n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  </nav>","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http'\nimport {map, catchError } from 'rxjs/operators'\nimport {GlobalDataSummary} from 'src/app/models/global-data'\nimport {DateWiseData} from 'src/app/models/date-wise-data'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataServiceService {\n  // p rivate date = '07-25-2020'\n// private GlobaldataUrl ='https://github.com/CSSEGISandData/COVID-19/blob/master/csse_covid_19_data/csse_covid_19_daily_reports/07-24-2020.csv'\nprivate baseURL = `https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_daily_reports/`;\nprivate GlobaldataUrl =\"\"\nprivate dateWiseDataUrl = `https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv`\n\nprivate extantion = '.csv';\nmonth;\ndate;\nyear\nGetDate(date:number){\n  if(date<10){\n    date -= 2 \n    if(date ==0)\n    {\n        if(this.month ==4 || this.month ==9 || this.month ==11 || this.month ==6)\n            date = 30;\n        else if(this.month==2)\n            date = 28;\n        else\n            date = 31;\n        this.month = this.month-1;\n        return date;\n    }\n    return \"0\"+(date)\n  }\n   return date\n}\n\nGetMonth(month:number){\n  if(month<10){\n    if(month == 0)\n      return '01'\n    return '0'+month;\n  }\n  return month\n    \n}\n\n\nconstructor(public http:HttpClient) {\n  let now = new Date()\n  this.month = now.getMonth()+1;\n  this.year = now.getFullYear();\n  this.date = now.getDate();\n  this.date = this.GetDate(this.date-1)\n  this.month = this.GetMonth(this.month)\n\n\n  this.GlobaldataUrl = ` ${this.baseURL}${this.month}-${this.date}-${this.year}${this.extantion}`\n\n  console.log(this.GlobaldataUrl)\n }\n\ngetdateWiseData(){\n  return this.http.get(this.dateWiseDataUrl, {responseType: 'text'}).pipe(\n    map(result=>{\n      let maindata ={}\n      let rows = result.split('\\n');\n      let header = rows[0];\n      let dates = header.split(/,(?=\\S)/)  \n      dates.splice(0,4)\n      rows.splice(0,1)\n      rows.forEach(row=>{\n        let cols =row.split(/,(?=\\S)/);\n        let con = cols[1]\n        cols.splice(0,4);\n        maindata[con] = [];\n        cols.forEach((value,index)=>{\n          let dw : DateWiseData ={\n            cases : +value,\n            country:con,\n            date:new Date(Date.parse(dates[index]))\n          }\n          maindata[con].push(dw);\n        })\n      })  \n      console.log(maindata)\n      return maindata;\n    })\n  )\n}\n  getGlobalData(){\nreturn this.http.get(this.GlobaldataUrl, {responseType: 'text'}).pipe(\n  map(result=>{\n   \n   let data : GlobalDataSummary[] =  [];\n   let raw ={}\n    let rows = result.split('\\n');\n    rows.splice(0,1)\n    rows.forEach(row =>\n      {\n        let cols = row.split(/,(?=\\S)/)\n        // cols.splice(12, 2);\n        let cs ={\n          country : cols[3],\n          confirmed : +cols[7],\n          deaths :  +cols[8],\n          recovered: +cols[9],\n          active: +cols[10],\n        }\n        let temp : GlobalDataSummary = raw[cs.country]\n        if(temp){\n          temp.active = cs.active + temp.active\n          temp.confirmed = cs.confirmed + temp.confirmed\n          temp.deaths = cs.deaths + temp.deaths\n          temp.recovered = cs.recovered + temp.recovered\n          raw[cs.country] =temp;  \n        }\n         else{\n          raw[cs.country] =cs;  \n\n         }\n        })\n      \n    return <GlobalDataSummary[]>Object.values(raw);\n   })\n  // catchError((error : HttpErrorResponse)=>{\n  //   if(error.status==404)\n  //   {\n  //      this.date = this.date-1\n  //      this.GlobaldataUrl = `${this.baseURL}${this.month}-${this.GetDate(this.date)}-${this.year}${this.extantion}`\n  //      return this.getGlobalData()\n  //   }\n  // })\n)\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}